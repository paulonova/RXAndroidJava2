package tutorial;

import java.util.ArrayList;
import java.util.List;

public class io.reactiveJava.Tutorial implements io.reactiveJava.Observable {
	
	private String authorName;
    private String post;	     
    
//    private static List<io.reactiveJava.Tutorial> publishedTutorials = new ArrayList<>();
//    private static List<io.reactiveJava.User> subscribedUsers = new ArrayList<>();
    private static List<io.reactiveJava.Observer> observers = new ArrayList<>();
    
    public static io.reactiveJava.Tutorial REGISTER_FOR_SUBSCRIPTION = new io.reactiveJava.Tutorial();
    
    public io.reactiveJava.Tutorial() {
	}
    
	public io.reactiveJava.Tutorial(String authorName, String post) {
		this.authorName = authorName;
		this.post = post;
	}
	


	public  void publish(){
    	notifyAllAboutChange();
    }
	
	
	
	//Getters and Setters
	public String getAuthorName() {
		return authorName;
	}
	public void setAuthorName(String authorName) {
		this.authorName = authorName;
	}
	public String getPost() {
		return post;
	}
	public void setPost(String post) {
		this.post = post;
	}
	
	

	@Override
	public void register(io.reactiveJava.Observer observer) {
		observers.add(observer);
		
	}

	@Override
	public void unregister(io.reactiveJava.Observer observer) {
		observers.remove(observer);
		
	}

	@Override
	public void notifyAllAboutChange() {
		
		for (io.reactiveJava.Observer observer : observers) {
            observer.notifyMe();
        }
		
	}
	
	
    

}
